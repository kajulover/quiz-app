{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\upraised\\\\quiz-app\\\\src\\\\components\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { submitAnswer, finishQuiz } from '../mockServer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const {\n    quizId = null\n  } = location.state || {};\n  useEffect(() => {\n    if (!quizId) {\n      // Redirect to home if no quizId is found\n      navigate('/');\n    }\n  }, [quizId, navigate]);\n  const submitAnswer = () => {\n    if (selectedOption) {\n      // Handle answer submission and move to the next question or report\n      navigate('/report');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"option1\",\n        name: \"option\",\n        value: \"Option 1\",\n        onChange: () => setSelectedOption('Option 1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"option1\",\n        children: \"Option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitAnswer,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"DH2gJ9niAWhQdTBQxXlNWNcpqbM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","submitAnswer","finishQuiz","jsxDEV","_jsxDEV","Question","_s","location","navigate","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","quizId","state","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/upraised/quiz-app/src/components/Question.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { submitAnswer, finishQuiz } from '../mockServer';\r\n\r\nfunction Question() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const { quizId = null} = location.state || {};\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      if (!quizId) {\r\n        // Redirect to home if no quizId is found\r\n        navigate('/');\r\n      }\r\n    }, [quizId, navigate]);\r\n  \r\n    const submitAnswer = () => {\r\n      if (selectedOption) {\r\n        // Handle answer submission and move to the next question or report\r\n        navigate('/report');\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Question 1</h1>\r\n      <div>\r\n        <input type=\"radio\" id=\"option1\" name=\"option\" value=\"Option 1\" onChange={() => setSelectedOption('Option 1')} />\r\n        <label htmlFor=\"option1\">Option 1</label>\r\n      </div>\r\n      <button onClick={submitAnswer}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Question;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,YAAY,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM;IAAEe,MAAM,GAAG;EAAI,CAAC,GAAGN,QAAQ,CAACO,KAAK,IAAI,CAAC,CAAC;EAI3CC,SAAS,CAAC,MAAM;IACd,IAAI,CAACF,MAAM,EAAE;MACX;MACAL,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACK,MAAM,EAAEL,QAAQ,CAAC,CAAC;EAEtB,MAAMP,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIU,cAAc,EAAE;MAClB;MACAH,QAAQ,CAAC,SAAS,CAAC;IACrB;EACJ,CAAC;EAED,oBACEJ,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAOiB,IAAI,EAAC,OAAO;QAACC,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC,UAAU;QAACC,QAAQ,EAAEA,CAAA,KAAMb,iBAAiB,CAAC,UAAU;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjHhB,OAAA;QAAOsB,OAAO,EAAC,SAAS;QAAAV,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNhB,OAAA;MAAQuB,OAAO,EAAE1B,YAAa;MAAAe,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACd,EAAA,CAlCQD,QAAQ;EAAA,QACEL,WAAW,EACXD,WAAW;AAAA;AAAA6B,EAAA,GAFrBvB,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}